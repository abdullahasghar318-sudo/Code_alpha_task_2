#Credit Scoring Model

import pandas as pd
import numpy as np

from sklearn.model_selection import cross_val_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, roc_auc_score
from sklearn.model_selection import train_test_split

# Loading the dataset

df = pd.read_csv("synthetic_credit_data.csv")
print("Data preview:")
print(df.head())

# Splitting features and target

X = df.drop("default", axis=1)
y = df["default"]

# Scalling Scale the features

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Training model using cross-validation

model = RandomForestClassifier()

# 5-fold cross-validation with ROC AUC as metric
cv_scores = cross_val_score(model, X_scaled, y, cv=5, scoring='roc_auc')

print("\nCross-validated ROC AUC scores (5 folds):", cv_scores)
print("Mean ROC AUC:", np.mean(cv_scores))

# Train/Test Split to get detailed metrics

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
model.fit(X_train, y_train)

# Predict and evaluate

y_pred = model.predict(X_test)
print("\nClassification Report on Test Set:")
print(classification_report(y_test, y_pred))
print("Test ROC AUC:", roc_auc_score(y_test, y_pred))